{"ast":null,"code":"import _defineProperty from \"C:/Users/momos/Desktop/BrieflyAI/brieflyfront/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport e from \"../lib/LdrsBaseElement.js\";\nvar t = ':host{align-items:center;display:inline-flex;flex-shrink:0;height:var(--uib-size);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{animation:rotate calc(var(--uib-speed)*2) linear infinite;filter:url(#uib-jelly-ooze);height:calc(var(--uib-size)/2);position:relative;width:var(--uib-size);will-change:transform}.container:after,.container:before{background-color:var(--uib-color);border-radius:100%;content:\"\";height:100%;left:25%;position:absolute;top:0;transition:background-color .3s ease;width:50%;will-change:transform}.container:before{animation:shift-left var(--uib-speed) ease infinite}.container:after{animation:shift-right var(--uib-speed) ease infinite}.svg{height:0;position:absolute;width:0}@keyframes rotate{0%,49.999%,to{transform:none}50%,99.999%{transform:rotate(90deg)}}@keyframes shift-left{0%,to{transform:translateX(0)}50%{transform:scale(.65) translateX(-75%)}}@keyframes shift-right{0%,to{transform:translateX(0)}50%{transform:scale(.65) translateX(75%)}}';\nclass i extends e {\n  static get observedAttributes() {\n    return [\"size\", \"color\", \"speed\"];\n  }\n  constructor() {\n    (super(), _defineProperty(this, \"_attributes\", [\"size\", \"color\", \"speed\"]), _defineProperty(this, \"size\", void 0), _defineProperty(this, \"color\", void 0), _defineProperty(this, \"speed\", void 0)), this.storePropsToUpgrade(this._attributes), this.reflect(this._attributes);\n  }\n  connectedCallback() {\n    this.upgradeStoredProps(), this.applyDefaultProps({\n      size: 40,\n      color: \"black\",\n      speed: .9\n    }), this.template.innerHTML = \"\\n      <div\\n        class=\\\"container\\\"\\n      ></div>\\n      <svg width=\\\"0\\\" height=\\\"0\\\" class=\\\"svg\\\">\\n        <defs>\\n          <filter id=\\\"uib-jelly-ooze\\\">\\n            <feGaussianBlur\\n              in=\\\"SourceGraphic\\\"\\n              stdDeviation=\".concat(parseInt(this.size) / 8, \"\\n              result=\\\"blur\\\"\\n            />\\n            <feColorMatrix\\n              in=\\\"blur\\\"\\n              mode=\\\"matrix\\\"\\n              values=\\\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\\\"\\n              result=\\\"ooze\\\"\\n            />\\n            <feBlend in=\\\"SourceGraphic\\\" in2=\\\"ooze\\\" />\\n          </filter>\\n        </defs>\\n      </svg>\\n      <style>\\n        :host{\\n          --uib-size: \").concat(this.size, \"px;\\n          --uib-color: \").concat(this.color, \";\\n          --uib-speed: \").concat(this.speed, \"s;\\n        }\\n        \").concat(t, \"\\n      </style>\\n    \"), this.shadow.replaceChildren(this.template.content.cloneNode(!0));\n  }\n  attributeChangedCallback() {\n    const e = this.shadow.querySelector(\"style\");\n    e && (e.innerHTML = \"\\n      :host{\\n        --uib-size: \".concat(this.size, \"px;\\n        --uib-color: \").concat(this.color, \";\\n        --uib-speed: \").concat(this.speed, \"s;\\n      }\\n      \").concat(t, \"\\n    \"));\n  }\n}\nvar s = {\n  register: function () {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"l-jelly\";\n    customElements.get(e) || customElements.define(e, class extends i {});\n  },\n  element: i\n};\nexport { s as default };","map":{"version":3,"names":["i","e","observedAttributes","constructor","_defineProperty","storePropsToUpgrade","_attributes","reflect","connectedCallback","upgradeStoredProps","applyDefaultProps","size","color","speed","template","innerHTML","concat","parseInt","t","shadow","replaceChildren","content","cloneNode","attributeChangedCallback","querySelector","s","register","arguments","length","undefined","customElements","get","define","element","default"],"sources":["C:\\Users\\momos\\Desktop\\BrieflyAI\\brieflyfront\\node_modules\\ldrs\\temp-ts-out\\elements\\jelly.js"],"sourcesContent":["import Base from '../lib/LdrsBaseElement.js';\nimport styles from './jelly.scss';\nclass Jelly extends Base {\n    _attributes = ['size', 'color', 'speed'];\n    size;\n    color;\n    speed;\n    static get observedAttributes() {\n        return ['size', 'color', 'speed'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 40,\n            color: 'black',\n            speed: 0.9,\n        });\n        this.template.innerHTML = `\n      <div\n        class=\"container\"\n      ></div>\n      <svg width=\"0\" height=\"0\" class=\"svg\">\n        <defs>\n          <filter id=\"uib-jelly-ooze\">\n            <feGaussianBlur\n              in=\"SourceGraphic\"\n              stdDeviation=${parseInt(this.size) / 8}\n              result=\"blur\"\n            />\n            <feColorMatrix\n              in=\"blur\"\n              mode=\"matrix\"\n              values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\n              result=\"ooze\"\n            />\n            <feBlend in=\"SourceGraphic\" in2=\"ooze\" />\n          </filter>\n        </defs>\n      </svg>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const styleEl = this.shadow.querySelector('style');\n        if (!styleEl)\n            return;\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${this.size}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-jelly') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends Jelly {\n            });\n        }\n    },\n    element: Jelly,\n};\n"],"mappings":";;;AAEA,MAAMA,CAAA,SAAcC,CAAA;EAKL,WAAAC,mBAAA;IACP,OAAO,CAAC,QAAQ,SAAS,QAC5B;EAAA;EACDC,YAAA;IACI,UAAAC,eAAA,sBARU,CAAC,QAAQ,SAAS,WAAAA,eAAA,wBAAAA,eAAA,yBAAAA,eAAA,0BAS5B,KAAKC,mBAAA,CAAoB,KAAKC,WAAA,GAC9B,KAAKC,OAAA,CAAQ,KAAKD,WAAA,CACrB;EAAA;EACDE,kBAAA;IACI,KAAKC,kBAAA,IACL,KAAKC,iBAAA,CAAkB;MACnBC,IAAA,EAAM;MACNC,KAAA,EAAO;MACPC,KAAA,EAAO;IAAA,IAEX,KAAKC,QAAA,CAASC,SAAA,0QAAAC,MAAA,CASOC,QAAA,CAAS,KAAKN,IAAA,IAAQ,waAAAK,MAAA,CAe3B,KAAKL,IAAA,kCAAAK,MAAA,CACJ,KAAKJ,KAAA,gCAAAI,MAAA,CACL,KAAKH,KAAA,6BAAAG,MAAA,CAEpBE,CAAA,6BAGF,KAAKC,MAAA,CAAOC,eAAA,CAAgB,KAAKN,QAAA,CAASO,OAAA,CAAQC,SAAA,EAAU,GAC/D;EAAA;EACDC,yBAAA;IACI,MAAMtB,CAAA,GAAU,KAAKkB,MAAA,CAAOK,aAAA,CAAc;IACrCvB,CAAA,KAELA,CAAA,CAAQc,SAAA,0CAAAC,MAAA,CAEM,KAAKL,IAAA,gCAAAK,MAAA,CACJ,KAAKJ,KAAA,8BAAAI,MAAA,CACL,KAAKH,KAAA,yBAAAG,MAAA,CAEpBE,CAAA,YAEH;EAAA;AAAA;AAEL,IAAeO,CAAA;EACXC,QAAA,EAAU,SAAAA,CAAA,EAAQ;IAAA,IAAPzB,CAAA,GAAA0B,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAO;IACTG,cAAA,CAAeC,GAAA,CAAI9B,CAAA,KACpB6B,cAAA,CAAeE,MAAA,CAAO/B,CAAA,EAAM,cAAcD,CAAA,IAE7C;EAAA;EAELiC,OAAA,EAASjC;AAAA;AAAA,SAAAyB,CAAA,IAAAS,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}