{"ast":null,"code":"import _defineProperty from \"C:/Users/momos/Desktop/BrieflyAI/brieflyfront/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport t from \"../lib/LdrsBaseElement.js\";\nvar e = \":host{align-items:center;display:inline-flex;flex-shrink:0;height:var(--uib-size);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{height:var(--uib-size);overflow:visible;transform-origin:center;width:var(--uib-size);will-change:transform}.car{stroke:var(--uib-color);stroke-dasharray:var(--uib-dash),var(--uib-gap);stroke-dashoffset:0;animation:travel var(--uib-speed) linear infinite;will-change:stroke-dasharray,stroke-dashoffset}.car,.track{fill:none;transition:stroke .5s ease}.track{stroke:var(--uib-color);opacity:var(--uib-bg-opacity)}@keyframes travel{0%{stroke-dashoffset:0}to{stroke-dashoffset:-100}}\";\nclass s extends t {\n  static get observedAttributes() {\n    return [\"size\", \"color\", \"stroke\", \"stroke-length\", \"speed\", \"bg-opacity\"];\n  }\n  constructor() {\n    (super(), _defineProperty(this, \"_attributes\", [\"size\", \"color\", \"speed\", \"stroke\", \"stroke-length\", \"bg-opacity\"]), _defineProperty(this, \"size\", void 0), _defineProperty(this, \"color\", void 0), _defineProperty(this, \"speed\", void 0), _defineProperty(this, \"stroke\", void 0), _defineProperty(this, \"stroke-length\", void 0), _defineProperty(this, \"bg-opacity\", void 0)), this.storePropsToUpgrade(this._attributes), this.reflect(this._attributes);\n  }\n  connectedCallback() {\n    this.upgradeStoredProps(), this.applyDefaultProps({\n      size: 35,\n      color: \"black\",\n      stroke: 5,\n      \"stroke-length\": .25,\n      speed: 1.2,\n      \"bg-opacity\": .1\n    });\n    const t = parseInt(this.size),\n      s = parseInt(this.stroke),\n      i = s / 2,\n      r = Math.max(t - s / 2, 0);\n    this.template.innerHTML = \"\\n      <svg\\n        class=\\\"container\\\"\\n        viewBox=\\\"0 0 \".concat(this.size, \" \").concat(this.size, \"\\\"\\n        height=\\\"\").concat(this.size, \"\\\"\\n        width=\\\"\").concat(this.size, \"\\\"\\n      >\\n        <rect \\n          class=\\\"track\\\"\\n          x=\\\"\").concat(i, \"\\\" \\n          y=\\\"\").concat(i, \"\\\" \\n          fill=\\\"none\\\" \\n          stroke-width=\\\"\").concat(this.stroke, \"px\\\" \\n          width=\\\"\").concat(r, \"\\\" \\n          height=\\\"\").concat(r, \"\\\"\\n        />\\n        <rect \\n          class=\\\"car\\\"\\n          x=\\\"\").concat(i, \"\\\" \\n          y=\\\"\").concat(i, \"\\\" \\n          fill=\\\"none\\\" \\n          stroke-width=\\\"\").concat(this.stroke, \"px\\\" \\n          width=\\\"\").concat(r, \"\\\" \\n          height=\\\"\").concat(r, \"\\\"\\n          pathlength=\\\"100\\\"\\n        />\\n      </svg>\\n      <style>\\n        :host{\\n          --uib-size: \").concat(this.size, \"px;\\n          --uib-color: \").concat(this.color, \";\\n          --uib-speed: \").concat(this.speed, \"s;\\n          --uib-dash: \").concat(100 * parseFloat(this[\"stroke-length\"]), \";\\n          --uib-gap: \").concat(100 - 100 * parseFloat(this[\"stroke-length\"]), \";\\n          --uib-bg-opacity: \").concat(this[\"bg-opacity\"], \";\\n        }\\n        \").concat(e, \"\\n      </style>\\n    \"), this.shadow.replaceChildren(this.template.content.cloneNode(!0));\n  }\n  attributeChangedCallback() {\n    const t = this.shadow.querySelector(\"style\"),\n      s = this.shadow.querySelector(\"svg\"),\n      i = this.shadow.querySelectorAll(\"rect\");\n    if (!t) return;\n    const r = parseInt(this.size),\n      n = parseInt(this.stroke),\n      o = String(n / 2),\n      a = String(Math.max(r - n / 2, 0));\n    s.setAttribute(\"height\", this.size), s.setAttribute(\"width\", this.size), s.setAttribute(\"viewBox\", \"0 0 \".concat(this.size, \" \").concat(this.size)), i.forEach(t => {\n      t.setAttribute(\"stroke-width\", this.stroke), t.setAttribute(\"width\", a), t.setAttribute(\"height\", a), t.setAttribute(\"x\", o), t.setAttribute(\"y\", o);\n    }), t.innerHTML = \"\\n      :host{\\n        --uib-size: \".concat(this.size, \"px;\\n        --uib-color: \").concat(this.color, \";\\n        --uib-speed: \").concat(this.speed, \"s;\\n        --uib-dash: \").concat(100 * parseFloat(this[\"stroke-length\"]), \";\\n        --uib-gap: \").concat(100 - 100 * parseFloat(this[\"stroke-length\"]), \";\\n        --uib-bg-opacity: \").concat(this[\"bg-opacity\"], \";\\n      }\\n      \").concat(e, \"\\n    \");\n  }\n}\nvar i = {\n  register: function () {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"l-square\";\n    customElements.get(t) || customElements.define(t, class extends s {});\n  },\n  element: s\n};\nexport { i as default };","map":{"version":3,"names":["s","t","observedAttributes","constructor","_defineProperty","storePropsToUpgrade","_attributes","reflect","connectedCallback","upgradeStoredProps","applyDefaultProps","size","color","stroke","speed","parseInt","i","r","Math","max","template","innerHTML","concat","parseFloat","e","shadow","replaceChildren","content","cloneNode","attributeChangedCallback","querySelector","querySelectorAll","n","o","String","a","setAttribute","forEach","register","arguments","length","undefined","customElements","get","define","element","default"],"sources":["C:\\Users\\momos\\Desktop\\BrieflyAI\\brieflyfront\\node_modules\\ldrs\\temp-ts-out\\elements\\square.js"],"sourcesContent":["import Base from '../lib/LdrsBaseElement.js';\nimport styles from './square.scss';\nclass Square extends Base {\n    _attributes = [\n        'size',\n        'color',\n        'speed',\n        'stroke',\n        'stroke-length',\n        'bg-opacity',\n    ];\n    size;\n    color;\n    speed;\n    stroke;\n    'stroke-length';\n    'bg-opacity';\n    static get observedAttributes() {\n        return ['size', 'color', 'stroke', 'stroke-length', 'speed', 'bg-opacity'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 35,\n            color: 'black',\n            stroke: 5,\n            'stroke-length': 0.25,\n            speed: 1.2,\n            'bg-opacity': 0.1,\n        });\n        const sizeInt = parseInt(this.size);\n        const strokeInt = parseInt(this.stroke);\n        const centerPoint = strokeInt / 2;\n        const strokeAdjustedSize = Math.max(sizeInt - strokeInt / 2, 0);\n        this.template.innerHTML = `\n      <svg\n        class=\"container\"\n        viewBox=\"0 0 ${this.size} ${this.size}\"\n        height=\"${this.size}\"\n        width=\"${this.size}\"\n      >\n        <rect \n          class=\"track\"\n          x=\"${centerPoint}\" \n          y=\"${centerPoint}\" \n          fill=\"none\" \n          stroke-width=\"${this.stroke}px\" \n          width=\"${strokeAdjustedSize}\" \n          height=\"${strokeAdjustedSize}\"\n        />\n        <rect \n          class=\"car\"\n          x=\"${centerPoint}\" \n          y=\"${centerPoint}\" \n          fill=\"none\" \n          stroke-width=\"${this.stroke}px\" \n          width=\"${strokeAdjustedSize}\" \n          height=\"${strokeAdjustedSize}\"\n          pathlength=\"100\"\n        />\n      </svg>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n          --uib-dash: ${parseFloat(this['stroke-length']) * 100};\n          --uib-gap: ${100 - parseFloat(this['stroke-length']) * 100};\n          --uib-bg-opacity: ${this['bg-opacity']};\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const styleEl = this.shadow.querySelector('style');\n        const svgEl = this.shadow.querySelector('svg');\n        const squareEls = this.shadow.querySelectorAll('rect');\n        if (!styleEl)\n            return;\n        const sizeInt = parseInt(this.size);\n        const strokeInt = parseInt(this.stroke);\n        const centerPoint = String(strokeInt / 2);\n        const strokeAdjustedSize = String(Math.max(sizeInt - strokeInt / 2, 0));\n        svgEl.setAttribute('height', this.size);\n        svgEl.setAttribute('width', this.size);\n        svgEl.setAttribute('viewBox', `0 0 ${this.size} ${this.size}`);\n        squareEls.forEach((squareEl) => {\n            squareEl.setAttribute('stroke-width', this.stroke);\n            squareEl.setAttribute('width', strokeAdjustedSize);\n            squareEl.setAttribute('height', strokeAdjustedSize);\n            squareEl.setAttribute('x', centerPoint);\n            squareEl.setAttribute('y', centerPoint);\n        });\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${this.size}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n        --uib-dash: ${parseFloat(this['stroke-length']) * 100};\n        --uib-gap: ${100 - parseFloat(this['stroke-length']) * 100};\n        --uib-bg-opacity: ${this['bg-opacity']};\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-square') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends Square {\n            });\n        }\n    },\n    element: Square,\n};\n"],"mappings":";;;AAEA,MAAMA,CAAA,SAAeC,CAAA;EAeN,WAAAC,mBAAA;IACP,OAAO,CAAC,QAAQ,SAAS,UAAU,iBAAiB,SAAS,aAChE;EAAA;EACDC,YAAA;IACI,UAAAC,eAAA,sBAlBU,CACV,QACA,SACA,SACA,UACA,iBACA,gBAAAA,eAAA,wBAAAA,eAAA,yBAAAA,eAAA,yBAAAA,eAAA,0BAAAA,eAAA,OAMJ,0BAAAA,eAAA,OACA,wBAMI,KAAKC,mBAAA,CAAoB,KAAKC,WAAA,GAC9B,KAAKC,OAAA,CAAQ,KAAKD,WAAA,CACrB;EAAA;EACDE,kBAAA;IACI,KAAKC,kBAAA,IACL,KAAKC,iBAAA,CAAkB;MACnBC,IAAA,EAAM;MACNC,KAAA,EAAO;MACPC,MAAA,EAAQ;MACR,iBAAiB;MACjBC,KAAA,EAAO;MACP,cAAc;IAAA;IAElB,MAAMb,CAAA,GAAUc,QAAA,CAAS,KAAKJ,IAAA;MACxBX,CAAA,GAAYe,QAAA,CAAS,KAAKF,MAAA;MAC1BG,CAAA,GAAchB,CAAA,GAAY;MAC1BiB,CAAA,GAAqBC,IAAA,CAAKC,GAAA,CAAIlB,CAAA,GAAUD,CAAA,GAAY,GAAG;IAC7D,KAAKoB,QAAA,CAASC,SAAA,uEAAAC,MAAA,CAGC,KAAKX,IAAA,OAAAW,MAAA,CAAQ,KAAKX,IAAA,2BAAAW,MAAA,CACvB,KAAKX,IAAA,0BAAAW,MAAA,CACN,KAAKX,IAAA,4EAAAW,MAAA,CAIPN,CAAA,yBAAAM,MAAA,CACAN,CAAA,8DAAAM,MAAA,CAEW,KAAKT,MAAA,+BAAAS,MAAA,CACZL,CAAA,8BAAAK,MAAA,CACCL,CAAA,6EAAAK,MAAA,CAILN,CAAA,yBAAAM,MAAA,CACAN,CAAA,8DAAAM,MAAA,CAEW,KAAKT,MAAA,+BAAAS,MAAA,CACZL,CAAA,8BAAAK,MAAA,CACCL,CAAA,uHAAAK,MAAA,CAMI,KAAKX,IAAA,kCAAAW,MAAA,CACJ,KAAKV,KAAA,gCAAAU,MAAA,CACL,KAAKR,KAAA,gCAAAQ,MAAA,CAC8B,MAApCC,UAAA,CAAW,KAAK,+CAAAD,MAAA,CACjB,MAA0C,MAApCC,UAAA,CAAW,KAAK,sDAAAD,MAAA,CACf,KAAK,yCAAAA,MAAA,CAEzBE,CAAA,6BAGF,KAAKC,MAAA,CAAOC,eAAA,CAAgB,KAAKN,QAAA,CAASO,OAAA,CAAQC,SAAA,EAAU,GAC/D;EAAA;EACDC,yBAAA;IACI,MAAM5B,CAAA,GAAU,KAAKwB,MAAA,CAAOK,aAAA,CAAc;MACpC9B,CAAA,GAAQ,KAAKyB,MAAA,CAAOK,aAAA,CAAc;MAClCd,CAAA,GAAY,KAAKS,MAAA,CAAOM,gBAAA,CAAiB;IAC/C,KAAK9B,CAAA,EACD;IACJ,MAAMgB,CAAA,GAAUF,QAAA,CAAS,KAAKJ,IAAA;MACxBqB,CAAA,GAAYjB,QAAA,CAAS,KAAKF,MAAA;MAC1BoB,CAAA,GAAcC,MAAA,CAAOF,CAAA,GAAY;MACjCG,CAAA,GAAqBD,MAAA,CAAOhB,IAAA,CAAKC,GAAA,CAAIF,CAAA,GAAUe,CAAA,GAAY,GAAG;IACpEhC,CAAA,CAAMoC,YAAA,CAAa,UAAU,KAAKzB,IAAA,GAClCX,CAAA,CAAMoC,YAAA,CAAa,SAAS,KAAKzB,IAAA,GACjCX,CAAA,CAAMoC,YAAA,CAAa,kBAAAd,MAAA,CAAkB,KAAKX,IAAA,OAAAW,MAAA,CAAQ,KAAKX,IAAA,IACvDK,CAAA,CAAUqB,OAAA,CAASpC,CAAA;MACfA,CAAA,CAASmC,YAAA,CAAa,gBAAgB,KAAKvB,MAAA,GAC3CZ,CAAA,CAASmC,YAAA,CAAa,SAASD,CAAA,GAC/BlC,CAAA,CAASmC,YAAA,CAAa,UAAUD,CAAA,GAChClC,CAAA,CAASmC,YAAA,CAAa,KAAKH,CAAA,GAC3BhC,CAAA,CAASmC,YAAA,CAAa,KAAKH,CAAA,CAAY;IAAA,IAE3ChC,CAAA,CAAQoB,SAAA,0CAAAC,MAAA,CAEM,KAAKX,IAAA,gCAAAW,MAAA,CACJ,KAAKV,KAAA,8BAAAU,MAAA,CACL,KAAKR,KAAA,8BAAAQ,MAAA,CAC8B,MAApCC,UAAA,CAAW,KAAK,6CAAAD,MAAA,CACjB,MAA0C,MAApCC,UAAA,CAAW,KAAK,oDAAAD,MAAA,CACf,KAAK,qCAAAA,MAAA,CAEzBE,CAAA,WAEH;EAAA;AAAA;AAEL,IAAeR,CAAA;EACXsB,QAAA,EAAU,SAAAA,CAAA,EAAQ;IAAA,IAAPrC,CAAA,GAAAsC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAO;IACTG,cAAA,CAAeC,GAAA,CAAI1C,CAAA,KACpByC,cAAA,CAAeE,MAAA,CAAO3C,CAAA,EAAM,cAAcD,CAAA,IAE7C;EAAA;EAEL6C,OAAA,EAAS7C;AAAA;AAAA,SAAAgB,CAAA,IAAA8B,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}