{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\momos\\\\Desktop\\\\BrieflyAI\\\\brieflyfront\\\\src\\\\LoadingScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { quantum } from 'ldrs';\nimport './LoadingScreen.css'; // Import a CSS file for custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nquantum.register();\nconst LoadingScreen = () => {\n  _s();\n  const wisdomMessages = [\"Brevity breeds clarity.\", \"Conciseness illuminates comprehension.\", \"In summaries lies clarity's key.\", \"Briefing, the art of distillation.\", \"In summary, lies mastery.\", \"Summarize to crystallize.\", \"Simplify, magnify.\", \"Briefing - the path to enlightenment.\", \"Clarity forged in succinctness.\", \"Condense for comprehension.\"];\n  const [randomWisdom, setRandomWisdom] = useState(null);\n  useEffect(() => {\n    // Generate a random wisdom message when the component mounts\n    generateRandomWisdom();\n  }, []);\n\n  // Function to generate and set a random wisdom message\n  const generateRandomWisdom = () => {\n    const randomIndex = Math.floor(Math.random() * wisdomMessages.length);\n    setRandomWisdom(wisdomMessages[randomIndex]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-quantum-container\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"l-quantum\", {\n        className: \"loading-quantum\" // Add a custom class for styling\n        ,\n        size: \"90\" // Adjust the size as needed\n        ,\n        speed: \"1.75\",\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), randomWisdom && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wisdom-message\",\n      children: [\"Loading Screen Wisdom: \", randomWisdom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingScreen, \"SJeO4s4YNveMSZACQtj6Bi1DM/I=\");\n_c = LoadingScreen;\nexport default LoadingScreen;\nvar _c;\n$RefreshReg$(_c, \"LoadingScreen\");","map":{"version":3,"names":["React","useState","useEffect","quantum","jsxDEV","_jsxDEV","register","LoadingScreen","_s","wisdomMessages","randomWisdom","setRandomWisdom","generateRandomWisdom","randomIndex","Math","floor","random","length","className","children","size","speed","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/momos/Desktop/BrieflyAI/brieflyfront/src/LoadingScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { quantum } from 'ldrs';\r\nimport './LoadingScreen.css'; // Import a CSS file for custom styles\r\n\r\nquantum.register();\r\n\r\nconst LoadingScreen = () => {\r\n  const wisdomMessages = [\r\n    \"Brevity breeds clarity.\",\r\n    \"Conciseness illuminates comprehension.\",\r\n    \"In summaries lies clarity's key.\",\r\n    \"Briefing, the art of distillation.\",\r\n    \"In summary, lies mastery.\",\r\n    \"Summarize to crystallize.\",\r\n    \"Simplify, magnify.\",\r\n    \"Briefing - the path to enlightenment.\",\r\n    \"Clarity forged in succinctness.\",\r\n    \"Condense for comprehension.\"\r\n  ];\r\n\r\n  const [randomWisdom, setRandomWisdom] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Generate a random wisdom message when the component mounts\r\n    generateRandomWisdom();\r\n  }, []);\r\n\r\n  // Function to generate and set a random wisdom message\r\n  const generateRandomWisdom = () => {\r\n    const randomIndex = Math.floor(Math.random() * wisdomMessages.length);\r\n    setRandomWisdom(wisdomMessages[randomIndex]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"loading-container\"> {/* Wrapper container */}\r\n      <div className=\"loading-quantum-container\"> {/* Container for loading quantum */}\r\n        <l-quantum\r\n          className=\"loading-quantum\" // Add a custom class for styling\r\n          size=\"90\" // Adjust the size as needed\r\n          speed=\"1.75\"\r\n          color=\"black\"\r\n        ></l-quantum>\r\n      </div>\r\n      {randomWisdom && (\r\n        <div className=\"wisdom-message\">\r\n          Loading Screen Wisdom: {randomWisdom}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,MAAM;AAC9B,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9BF,OAAO,CAACG,QAAQ,CAAC,CAAC;AAElB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,cAAc,GAAG,CACrB,yBAAyB,EACzB,wCAAwC,EACxC,kCAAkC,EAClC,oCAAoC,EACpC,2BAA2B,EAC3B,2BAA2B,EAC3B,oBAAoB,EACpB,uCAAuC,EACvC,iCAAiC,EACjC,6BAA6B,CAC9B;EAED,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd;IACAU,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,cAAc,CAACQ,MAAM,CAAC;IACrEN,eAAe,CAACF,cAAc,CAACI,WAAW,CAAC,CAAC;EAC9C,CAAC;EAED,oBACER,OAAA;IAAKa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,GAAC,GAAC,eAClCd,OAAA;MAAKa,SAAS,EAAC,2BAA2B;MAAAC,QAAA,GAAC,GAAC,eAC1Cd,OAAA;QACEa,SAAS,EAAC,iBAAiB,CAAC;QAAA;QAC5BE,IAAI,EAAC,IAAI,CAAC;QAAA;QACVC,KAAK,EAAC,MAAM;QACZC,KAAK,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,EACLhB,YAAY,iBACXL,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAAC,yBACP,EAACT,YAAY;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAAlB,EAAA,CA5CKD,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}