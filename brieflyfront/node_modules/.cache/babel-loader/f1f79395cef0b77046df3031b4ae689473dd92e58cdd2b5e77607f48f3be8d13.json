{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\momos\\\\Desktop\\\\BrieflyAI\\\\brieflyfront\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ProgressBar from 'progressbar.js'; // Assuming you have progressbar.js installed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const progressRef = useRef(null); // Reference for the progress bar element\n\n  useEffect(() => {\n    // Initialize the progress bar when the component mounts\n    progressRef.current = new ProgressBar.Circle('#progress-bar', {\n      // Progress bar configuration options (adjust as needed)\n      color: '#aaa',\n      strokeWidth: 4,\n      trailWidth: 1,\n      easing: 'easeInOut',\n      duration: 1400,\n      text: {\n        autoStyleContainer: false\n      },\n      from: {\n        color: '#aaa',\n        width: 1\n      },\n      to: {\n        color: '#333',\n        width: 4\n      },\n      step: function (state, circle) {\n        circle.path.setAttribute('stroke', state.color);\n        circle.path.setAttribute('stroke-width', state.width);\n        const value = Math.round(circle.value() * 100);\n        if (value === 0) {\n          circle.setText('');\n        } else {\n          circle.setText(value);\n        }\n      }\n    });\n  }, []); // Run this effect only once, when the component mounts\n\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!selectedFile) {\n      alert('Please select a file first.');\n      return;\n    }\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    const config = {\n      onUploadProgress: progressEvent => {\n        const uploadProgress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        console.log('Upload progress:', uploadProgress);\n        progressRef.current.animate(uploadProgress / 100); // Update progress bar based on upload progress\n      }\n    };\n    axios.post('http://localhost:5000/upload', formData, config).then(response => {\n      setLoading(false);\n      progressRef.current.animate(1.0); // Animate to 100% on successful upload\n      console.log('Upload successful:', response.data);\n      // Redirect to summary page with the summary data\n      window.location.href = `/summary?summary=${response.data.summary}`;\n    }).catch(error => {\n      console.error('Error:', error);\n      setLoading(false);\n      alert('File upload failed!');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Briefly AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Effortlessly Summarize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileInput\",\n        className: \"file-input\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        className: \"button\",\n        children: \"Choose File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleUpload,\n        disabled: !selectedFile,\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"filename\",\n      children: [\"Selected File: \", selectedFile.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"progress-bar\",\n      className: \"loading-bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZzSuLNTVg8TTxEpS91MPYpFLXZ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","ProgressBar","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","loading","setLoading","progressRef","current","Circle","color","strokeWidth","trailWidth","easing","duration","text","autoStyleContainer","from","width","to","step","state","circle","path","setAttribute","value","Math","round","setText","handleFileChange","event","target","files","handleUpload","alert","formData","FormData","append","config","onUploadProgress","progressEvent","uploadProgress","loaded","total","console","log","animate","post","then","response","data","window","location","href","summary","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","htmlFor","onClick","disabled","name","_c","$RefreshReg$"],"sources":["C:/Users/momos/Desktop/BrieflyAI/brieflyfront/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ProgressBar from 'progressbar.js'; // Assuming you have progressbar.js installed\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const progressRef = useRef(null); // Reference for the progress bar element\n\n  useEffect(() => {\n    // Initialize the progress bar when the component mounts\n    progressRef.current = new ProgressBar.Circle('#progress-bar', {\n      // Progress bar configuration options (adjust as needed)\n      color: '#aaa',\n      strokeWidth: 4,\n      trailWidth: 1,\n      easing: 'easeInOut',\n      duration: 1400,\n      text: {\n        autoStyleContainer: false,\n      },\n      from: { color: '#aaa', width: 1 },\n      to: { color: '#333', width: 4 },\n      step: function (state, circle) {\n        circle.path.setAttribute('stroke', state.color);\n        circle.path.setAttribute('stroke-width', state.width);\n\n        const value = Math.round(circle.value() * 100);\n        if (value === 0) {\n          circle.setText('');\n        } else {\n          circle.setText(value);\n        }\n      },\n    });\n  }, []); // Run this effect only once, when the component mounts\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    if (!selectedFile) {\n      alert('Please select a file first.');\n      return;\n    }\n\n    setLoading(true);\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    const config = {\n      onUploadProgress: (progressEvent) => {\n        const uploadProgress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n        console.log('Upload progress:', uploadProgress);\n        progressRef.current.animate(uploadProgress / 100); // Update progress bar based on upload progress\n      },\n    };\n\n    axios.post('http://localhost:5000/upload', formData, config)\n      .then(response => {\n        setLoading(false);\n        progressRef.current.animate(1.0); // Animate to 100% on successful upload\n        console.log('Upload successful:', response.data);\n        // Redirect to summary page with the summary data\n        window.location.href = `/summary?summary=${response.data.summary}`;\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        setLoading(false);\n        alert('File upload failed!');\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Briefly AI</h1>\n        <p>Effortlessly Summarize</p>\n      </header>\n      <div className=\"button-container\">\n        <input\n          type=\"file\"\n          id=\"fileInput\"\n          className=\"file-input\"\n          onChange={handleFileChange}\n        />\n        <label htmlFor=\"fileInput\" className=\"button\">Choose File</label>\n        <button className=\"button\" onClick={handleUpload} disabled={!selectedFile}>\n          Upload File\n        </button>\n      </div>\n      {selectedFile && (\n        <p className=\"filename\">Selected File: {selectedFile.name}</p>\n      )}\n      {loading && (\n        <div id=\"progress-bar\" className=\"loading-bar\"></div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}