{"ast":null,"code":"import _defineProperty from \"C:/Users/momos/Desktop/BrieflyAI/brieflyfront/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport t from \"../lib/scaleD.js\";\nimport e from \"../lib/LdrsBaseElement.js\";\nvar s = \":host{align-items:center;display:inline-flex;flex-shrink:0;height:calc(var(--uib-size)*.625);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{height:calc(var(--uib-size)*.625);overflow:visible;transform-origin:center;width:var(--uib-size)}.car{stroke:var(--uib-color);stroke-dasharray:100;stroke-dashoffset:0;animation:travel var(--uib-speed) ease-in-out infinite,fade var(--uib-speed) ease-out infinite;transition:stroke .5s ease;will-change:stroke-dasharray,stroke-dashoffset}.car,.track{stroke-linecap:round;stroke-linejoin:round}.track{stroke:var(--uib-color);opacity:var(--uib-bg-opacity)}@keyframes travel{0%{stroke-dashoffset:100}75%{stroke-dashoffset:0}}@keyframes fade{0%{opacity:0}20%,55%{opacity:1}to{opacity:0}}\";\nclass i extends e {\n  static get observedAttributes() {\n    return [\"size\", \"color\", \"speed\", \"stroke\", \"bg-opacity\"];\n  }\n  constructor() {\n    (super(), _defineProperty(this, \"_attributes\", [\"size\", \"color\", \"speed\", \"stroke\", \"bg-opacity\"]), _defineProperty(this, \"size\", void 0), _defineProperty(this, \"color\", void 0), _defineProperty(this, \"speed\", void 0), _defineProperty(this, \"stroke\", void 0), _defineProperty(this, \"bg-opacity\", void 0), _defineProperty(this, \"d\", void 0)), this.storePropsToUpgrade(this._attributes), this.reflect(this._attributes), this.d = \"M0.5,17.2h8.2l3-4.7l5.9,12l7.8-24l5.9,16.7v0h8.2\";\n  }\n  connectedCallback() {\n    this.upgradeStoredProps(), this.applyDefaultProps({\n      size: 50,\n      color: \"black\",\n      speed: 1.5,\n      stroke: 4,\n      \"bg-opacity\": .1\n    });\n    const e = parseInt(this.size),\n      i = t(e / 40, this.d);\n    this.template.innerHTML = \"\\n      <svg\\n        class=\\\"container\\\" \\n        x=\\\"0px\\\" \\n        y=\\\"0px\\\"\\n        viewBox=\\\"0 0 \".concat(this.size, \" \").concat(.625 * e, \"\\\"\\n        height=\\\"\").concat(.625 * e, \"\\\"\\n        width=\\\"\").concat(this.size, \"\\\"\\n        preserveAspectRatio='xMidYMid meet'\\n      >\\n        <path \\n          class=\\\"track\\\"\\n          stroke-width=\\\"\").concat(this.stroke, \"\\\" \\n          fill=\\\"none\\\" \\n          pathlength=\\\"100\\\"\\n          d=\\\"\").concat(i, \"\\\"\\n        />\\n        <path \\n          class=\\\"car\\\"\\n          stroke-width=\\\"\").concat(this.stroke, \"\\\" \\n          fill=\\\"none\\\" \\n          pathlength=\\\"100\\\"\\n          d=\\\"\").concat(i, \"\\\"\\n        />\\n      </svg>\\n      <style>\\n        :host{\\n          --uib-size: \").concat(this.size, \"px;\\n          --uib-color: \").concat(this.color, \";\\n          --uib-speed: \").concat(this.speed, \"s;\\n          --uib-bg-opacity: \").concat(this[\"bg-opacity\"], \";\\n        }\\n        \").concat(s, \"\\n      </style>\\n    \"), this.shadow.replaceChildren(this.template.content.cloneNode(!0));\n  }\n  attributeChangedCallback() {\n    const e = parseInt(this.size),\n      i = this.shadow.querySelector(\"style\"),\n      r = this.shadow.querySelector(\"svg\"),\n      o = this.shadow.querySelectorAll(\"path\");\n    i && (r.setAttribute(\"height\", String(.625 * e)), r.setAttribute(\"width\", this.size), r.setAttribute(\"viewBox\", \"0 0 \".concat(this.size, \" \").concat(.625 * e)), o.forEach(s => {\n      s.setAttribute(\"stroke-width\", this.stroke), s.setAttribute(\"d\", t(e / 40, this.d));\n    }), i.innerHTML = \"\\n      :host{\\n        --uib-size: \".concat(this.size, \"px;\\n        --uib-color: \").concat(this.color, \";\\n        --uib-speed: \").concat(this.speed, \"s;\\n        --uib-bg-opacity: \").concat(this[\"bg-opacity\"], \";\\n      }\\n      \").concat(s, \"\\n    \"));\n  }\n}\nvar r = {\n  register: function () {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"l-cardio\";\n    customElements.get(t) || customElements.define(t, class extends i {});\n  },\n  element: i\n};\nexport { r as default };","map":{"version":3,"names":["i","e","observedAttributes","constructor","_defineProperty","storePropsToUpgrade","_attributes","reflect","d","connectedCallback","upgradeStoredProps","applyDefaultProps","size","color","speed","stroke","parseInt","t","template","innerHTML","concat","s","shadow","replaceChildren","content","cloneNode","attributeChangedCallback","querySelector","r","o","querySelectorAll","setAttribute","String","forEach","register","arguments","length","undefined","customElements","get","define","element","default"],"sources":["C:\\Users\\momos\\Desktop\\BrieflyAI\\brieflyfront\\node_modules\\ldrs\\temp-ts-out\\elements\\cardio.js"],"sourcesContent":["import scaleD from '../lib/scaleD.js';\nimport Base from '../lib/LdrsBaseElement.js';\nimport styles from './cardio.scss';\nclass Cardio extends Base {\n    _attributes = ['size', 'color', 'speed', 'stroke', 'bg-opacity'];\n    size;\n    color;\n    speed;\n    stroke;\n    'bg-opacity';\n    d;\n    static get observedAttributes() {\n        return ['size', 'color', 'speed', 'stroke', 'bg-opacity'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n        this.d = 'M0.5,17.2h8.2l3-4.7l5.9,12l7.8-24l5.9,16.7v0h8.2';\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 50,\n            color: 'black',\n            speed: 1.5,\n            stroke: 4,\n            'bg-opacity': 0.1,\n        });\n        const sizeInt = parseInt(this.size);\n        const scaledD = scaleD(sizeInt / 40, this.d);\n        this.template.innerHTML = `\n      <svg\n        class=\"container\" \n        x=\"0px\" \n        y=\"0px\"\n        viewBox=\"0 0 ${this.size} ${sizeInt * (25 / 40)}\"\n        height=\"${sizeInt * (25 / 40)}\"\n        width=\"${this.size}\"\n        preserveAspectRatio='xMidYMid meet'\n      >\n        <path \n          class=\"track\"\n          stroke-width=\"${this.stroke}\" \n          fill=\"none\" \n          pathlength=\"100\"\n          d=\"${scaledD}\"\n        />\n        <path \n          class=\"car\"\n          stroke-width=\"${this.stroke}\" \n          fill=\"none\" \n          pathlength=\"100\"\n          d=\"${scaledD}\"\n        />\n      </svg>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n          --uib-bg-opacity: ${this['bg-opacity']};\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const sizeInt = parseInt(this.size);\n        const styleEl = this.shadow.querySelector('style');\n        const svgEl = this.shadow.querySelector('svg');\n        const pathEls = this.shadow.querySelectorAll('path');\n        if (!styleEl)\n            return;\n        svgEl.setAttribute('height', String(sizeInt * (25 / 40)));\n        svgEl.setAttribute('width', this.size);\n        svgEl.setAttribute('viewBox', `0 0 ${this.size} ${sizeInt * (25 / 40)}`);\n        pathEls.forEach((pathEl) => {\n            pathEl.setAttribute('stroke-width', this.stroke);\n            pathEl.setAttribute('d', scaleD(sizeInt / 40, this.d));\n        });\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${this.size}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n        --uib-bg-opacity: ${this['bg-opacity']};\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-cardio') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends Cardio {\n            });\n        }\n    },\n    element: Cardio,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}